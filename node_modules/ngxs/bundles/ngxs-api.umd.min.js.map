{
  "version": 3,
  "file": "ngxs-api.umd.min.js",
  "sources": [
    "ng://ngxs/node_modules/tslib/tslib.es6.js",
    "ng://ngxs/out/symbols.ts",
    "ng://ngxs/out/internals.ts",
    "ng://ngxs/out/state-factory.ts",
    "ng://ngxs/out/actions-stream.ts",
    "ng://ngxs/out/compose.ts",
    "ng://ngxs/out/state-stream.ts",
    "ng://ngxs/out/plugin-manager.ts",
    "ng://ngxs/out/store.ts",
    "ng://ngxs/out/select.ts",
    "ng://ngxs/out/actions/init.ts",
    "ng://ngxs/out/module.ts",
    "ng://ngxs/out/plugins/devtools/symbols.ts",
    "ng://ngxs/out/plugins/devtools/devtools.plugin.ts",
    "ng://ngxs/out/plugins/devtools/devtools.module.ts",
    "ng://ngxs/out/plugins/logger/symbols.ts",
    "ng://ngxs/out/plugins/logger/internals.ts",
    "ng://ngxs/out/plugins/logger/logger.plugin.ts",
    "ng://ngxs/out/plugins/logger/logger.module.ts",
    "ng://ngxs/out/plugins/localstorage/symbols.ts",
    "ng://ngxs/out/plugins/localstorage/localstorage.plugin.ts",
    "ng://ngxs/out/plugins/localstorage/utils.ts",
    "ng://ngxs/out/plugins/localstorage/localstorage.module.ts",
    "ng://ngxs/out/action.ts",
    "ng://ngxs/out/state.ts",
    "ng://ngxs/out/of-action.ts",
    "ng://ngxs/out/selector.ts",
    "ng://ngxs/out/memoize.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nexport const ROOT_STATE_TOKEN = new InjectionToken<any>('ROOT_STATE_TOKEN');\nexport const FEATURE_STATE_TOKEN = new InjectionToken<any>('FEATURE_STATE_TOKEN');\nexport const META_KEY = 'NGXS_META';\n\nexport type NgxsPluginConstructor = new (...args: any[]) => NgxsPlugin;\n\nexport interface NgxsOptions {\n  plugins: Array<NgxsPluginConstructor | NgxsPluginFn>;\n}\n\nexport interface StateContext<T> {\n  /**\n   * Get the current state.\n   */\n  getState(): T;\n\n  /**\n   * Reset the state to a new value.\n   */\n  setState(val: T);\n\n  /**\n   * Patch the existing state with the provided value.\n   */\n  patchState(val: Partial<T>);\n\n  /**\n   * Dispatch a new action and return the dispatched observable.\n   */\n  dispatch(actions: any | any[]): Observable<void>;\n}\n\nexport type NgxsNextPluginFn = (state: any, mutation: any) => any;\n\nexport interface NgxsPlugin {\n  /**\n   * Handle the state/action before its submitted to the state handlers.\n   */\n  handle(state: any, action: any, next: NgxsNextPluginFn): any;\n}\n\nexport const NGXS_PLUGINS = new InjectionToken('NGXS_PLUGINS');\n\nexport type NgxsPluginFn = (state: any, mutation: any, next: NgxsNextPluginFn) => any;\n\nexport interface StoreOptions<T> {\n  /**\n   * Name of the state. Required.\n   */\n  name: string;\n\n  /**\n   * Default values for the state. If not provided, uses empty object.\n   */\n  defaults?: T;\n\n  /**\n   * Sub states for the given state.\n   */\n  children?: any[];\n}\n",
    "import { META_KEY } from './symbols';\n\nexport interface MetaDataModel {\n  name: string;\n  actions: any;\n  defaults: any;\n  path: string;\n  children: any[];\n}\n\n/**\n * Ensures metadata is attached to the klass and returns it.\n */\nexport function ensureStoreMetadata(target): MetaDataModel {\n  if (!target.hasOwnProperty(META_KEY)) {\n    const defaultMetadata: MetaDataModel = {\n      name: null,\n      actions: {},\n      defaults: {},\n      path: null,\n      children: []\n    };\n\n    Object.defineProperty(target, META_KEY, { value: defaultMetadata });\n  }\n\n  return target[META_KEY];\n}\n\n/**\n * The generated function is faster than:\n * - pluck (Observable operator)\n * - memoize\n */\nexport function fastPropGetter(paths: string[]): (x: any) => any {\n  const segments = paths;\n  let seg = 'store.' + segments[0];\n  let i = 0;\n  const l = segments.length;\n\n  let expr = seg;\n  while (++i < l) {\n    expr = expr + ' && ' + (seg = seg + '.' + segments[i]);\n  }\n\n  const fn = new Function('store', 'return ' + expr + ';');\n\n  return <(x: any) => any>fn;\n}\n\n/**\n * Returns the type from a event class.\n */\nexport function getTypeFromKlass(event) {\n  if (event.type) {\n    return event.type;\n  } else if (event.name) {\n    return event.name;\n  }\n}\n\n/**\n * Returns the type from a event instance.\n */\nexport function getTypeFromInstance(event) {\n  if (event.constructor.type) {\n    return event.constructor.type;\n  } else if (event.constructor.name) {\n    return event.constructor.name;\n  } else if (event.type) {\n    // events from dev tools are plain objects\n    return event.type;\n  }\n}\n\n/**\n * Given an array of states, it will return a object graph. Example:\n *    const states = [\n *      Cart,\n *      CartSaved,\n *      CartSavedItems\n *    ]\n *\n * would return:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n */\nexport function buildGraph(states) {\n  const findName = klass => {\n    const meta = states.find(g => g === klass);\n    if (!meta) {\n      throw new Error(`Child state not found: ${klass}`);\n    }\n\n    if (!meta[META_KEY]) {\n      throw new Error('States must be decorated with @State() decorator');\n    }\n\n    return meta[META_KEY].name;\n  };\n\n  return states.reduce((result, klass) => {\n    if (!klass[META_KEY]) {\n      throw new Error('States must be decorated with @State() decorator');\n    }\n\n    const { name, children } = klass[META_KEY];\n    result[name] = (children || []).map(findName);\n    return result;\n  }, {});\n}\n\n/**\n * Given a states array, returns object graph\n * returning the name and state metadata. Example:\n *\n *  const graph = {\n *    cart: { metadata }\n *  };\n *\n */\nexport function nameToState(states) {\n  return states.reduce((result, klass) => {\n    if (!klass[META_KEY]) {\n      throw new Error('States must be decorated with @State() decorator');\n    }\n\n    const meta = klass[META_KEY];\n    result[meta.name] = klass;\n    return result;\n  }, {});\n}\n\n/**\n * Given a object relationship graph will return the full path\n * for the child items. Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const r = {\n *    cart: 'cart',\n *    saved: 'cart.saved',\n *    items: 'cart.saved.items'\n *  };\n *\n */\nexport function findFullParentPath(obj: any, newObj: any = {}) {\n  const visit = (child: any, keyToFind: string) => {\n    for (const key in child) {\n      if (child.hasOwnProperty(key) && child[key].indexOf(keyToFind) >= 0) {\n        const parent = visit(child, key);\n        return parent !== null ? `${parent}.${key}` : key;\n      }\n    }\n    return null;\n  };\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      const parent = visit(obj, key);\n      newObj[key] = parent ? `${parent}.${key}` : key;\n    }\n  }\n\n  return newObj;\n}\n\n/**\n * Given a object graph, it will return the items topologically sorted Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const results = [\n *    'items',\n *    'saved',\n *    'cart'\n *  ];\n *\n */\nexport function topologicalSort(graph) {\n  const sorted = [];\n  const visited = {};\n  const visit = (name, ancestors: any = []) => {\n    if (!Array.isArray(ancestors)) {\n      ancestors = [];\n    }\n\n    ancestors.push(name);\n    visited[name] = true;\n\n    graph[name].forEach(dep => {\n      if (ancestors.indexOf(dep) >= 0) {\n        throw new Error(`Circular dependency '${dep}' is required by '${name}': ${ancestors.join(' -> ')}`);\n      }\n\n      if (visited[dep]) return;\n      visit(dep, ancestors.slice(0));\n    });\n\n    if (sorted.indexOf(name) < 0) {\n      sorted.push(name);\n    }\n  };\n\n  Object.keys(graph).forEach(k => visit(k));\n\n  return sorted.reverse();\n}\n\n/**\n * Set a deeply nested value. Example:\n *\n *   setValue({ foo: { bar: { eat: false } } },\n *      'foo.bar.eat', true) //=> { foo: { bar: { eat: true } } }\n *\n * While it traverses it also creates new objects from top down.\n */\nexport const setValue = (obj: any, prop: string, val: any) => {\n  obj = { ...obj };\n\n  const split = prop.split('.');\n  const last = split[split.length - 1];\n\n  split.reduce((acc, part) => {\n    if (part === last) {\n      acc[part] = val;\n    } else {\n      acc[part] = { ...acc[part] };\n    }\n\n    return acc && acc[part];\n  }, obj);\n\n  return obj;\n};\n\n/**\n * Get a deeply nested value. Example:\n *\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\n *\n */\nexport const getValue = (obj: any, prop: string) =>\n  prop.split('.').reduce((acc: any, part: string) => acc && acc[part], obj);\n\n/**\n * Returns if the parameter is a object or not.\n */\nexport function isObject(obj) {\n  return (typeof obj === 'object' && obj !== null) || typeof obj === 'function';\n}\n",
    "import { Injector, Injectable, SkipSelf, Optional } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { META_KEY } from './symbols';\nimport {\n  getTypeFromInstance,\n  topologicalSort,\n  buildGraph,\n  findFullParentPath,\n  nameToState,\n  setValue,\n  getValue,\n  MetaDataModel,\n  isObject\n} from './internals';\n\n@Injectable()\nexport class StateFactory {\n  get states() {\n    return this._parentFactory ? this._parentFactory.states : this._states;\n  }\n  private _states = [];\n\n  constructor(\n    private _injector: Injector,\n    @Optional()\n    @SkipSelf()\n    private _parentFactory: StateFactory\n  ) {}\n\n  add(states: any | any[]): any[] {\n    if (!Array.isArray(states)) {\n      states = [states];\n    }\n\n    const stateGraph = buildGraph(states);\n    const sortedStates = topologicalSort(stateGraph);\n    const depths = findFullParentPath(stateGraph);\n    const nameGraph = nameToState(states);\n    const mappedStores = [];\n\n    for (const name of sortedStates) {\n      const klass = nameGraph[name];\n\n      if (!klass[META_KEY]) {\n        throw new Error('States must be decorated with @State() decorator');\n      }\n\n      const depth = depths[name];\n      const { actions } = klass[META_KEY] as MetaDataModel;\n      let { defaults } = klass[META_KEY] as MetaDataModel;\n\n      (klass[META_KEY] as MetaDataModel).path = depth;\n\n      // ensure our store hasn't already been added\n      const has = this.states.find(s => s.name === name);\n\n      if (has) {\n        throw new Error(`Store has already been added: ${name}`);\n      }\n\n      // create new instance of defaults\n      if (Array.isArray(defaults)) {\n        defaults = [...defaults];\n      } else if (isObject(defaults)) {\n        defaults = { ...defaults };\n      } else if (defaults === undefined) {\n        defaults = {};\n      }\n\n      const instance = this._injector.get(klass);\n\n      mappedStores.push({\n        actions,\n        instance,\n        defaults,\n        name,\n        depth\n      });\n    }\n\n    this.states.push(...mappedStores);\n\n    return mappedStores;\n  }\n\n  addAndReturnDefaults(stores: any[]): any {\n    return this.add(stores).reduce((result, meta) => setValue(result, meta.depth, meta.defaults), {});\n  }\n\n  invokeActions(getState, setState, dispatch, action): any[] {\n    const results = [];\n\n    for (const metadata of this.states) {\n      const name = getTypeFromInstance(action);\n      const actionMetas = metadata.actions[name];\n\n      if (actionMetas) {\n        for (const actionMeta of actionMetas) {\n          const stateContext = {\n            getState(): any {\n              const state = getState();\n              return getValue(state, metadata.depth);\n            },\n            patchState(val: any): void {\n              if (Array.isArray(val)) {\n                throw new Error('Patching arrays is not supported.');\n              }\n\n              let state = getState();\n              const local = getValue(state, metadata.depth);\n              for (const k in val) {\n                local[k] = val[k];\n              }\n              state = setValue(state, metadata.depth, { ...local });\n              setState(state);\n              return state;\n            },\n            setState(val: any): any {\n              let state = getState();\n              state = setValue(state, metadata.depth, val);\n              setState(state);\n              return state;\n            },\n            dispatch(actions: any | any[]): Observable<any> {\n              return dispatch(actions);\n            }\n          };\n\n          const result = metadata.instance[actionMeta.fn](stateContext, action);\n          if (result) {\n            results.push(result);\n          }\n        }\n      }\n    }\n\n    return results;\n  }\n}\n",
    "import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n/**\n * Action stream that is emitted anytime an action is dispatched.\n * You can listen to this in services to react without stores.\n */\n@Injectable()\nexport class Actions extends BehaviorSubject<any> {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parent: Actions\n  ) {\n    super({});\n\n    if (parent) {\n      Object.assign(this, parent);\n    }\n  }\n}\n",
    "/**\n * Composes a array of functions from left to right. Example:\n *\n *      compose([fn, final])(state, action);\n *\n * then the funcs have a signature like:\n *\n *      function fn (state, action, next) {\n *          console.log('here', state, action, next);\n *          return next(state, action);\n *      }\n *\n *      function final (state, action) {\n *          console.log('here', state, action);\n *          return state;\n *      }\n *\n * the last function should not call `next`.\n */\nexport const compose = funcs => (...args) => {\n  const curr = funcs.shift();\n  return curr(...args, (...nextArgs) => compose(funcs)(...nextArgs));\n};\n",
    "import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n/**\n * BehaviorSubject of the entire state.\n */\n@Injectable()\nexport class StateStream extends BehaviorSubject<any> {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parent: StateStream\n  ) {\n    super({});\n\n    if (parent) {\n      Object.assign(this, parent);\n    }\n  }\n}\n",
    "import { Injectable, Optional, SkipSelf, Inject } from '@angular/core';\nimport { NgxsPluginFn, NGXS_PLUGINS, NgxsPlugin } from './symbols';\n\n@Injectable()\nexport class PluginManager {\n  plugins: NgxsPluginFn[] = [];\n\n  constructor(\n    @Optional()\n    @SkipSelf()\n    private _parentManager: PluginManager,\n    @Inject(NGXS_PLUGINS)\n    @Optional()\n    private _plugins: NgxsPlugin[]\n  ) {\n    this.register();\n  }\n\n  private register() {\n    if (!this._plugins) {\n      return;\n    }\n\n    this.plugins = this._plugins.map(plugin => {\n      if (plugin.handle) {\n        return plugin.handle.bind(plugin);\n      } else {\n        return plugin;\n      }\n    });\n\n    if (this._parentManager) {\n      this._parentManager.plugins.push(...this.plugins);\n    }\n  }\n}\n",
    "import { Injectable, ErrorHandler } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged, catchError, take } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { map } from 'rxjs/operators/map';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { of } from 'rxjs/observable/of';\n\nimport { compose } from './compose';\nimport { Actions } from './actions-stream';\nimport { StateFactory } from './state-factory';\nimport { StateStream } from './state-stream';\nimport { PluginManager } from './plugin-manager';\nimport { fastPropGetter } from './internals';\nimport { META_KEY } from './symbols';\n\n@Injectable()\nexport class Store {\n  constructor(\n    private _errorHandler: ErrorHandler,\n    private _actions: Actions,\n    private _storeFactory: StateFactory,\n    private _stateStream: StateStream,\n    private _pluginManager: PluginManager\n  ) {}\n\n  /**\n   * Dispatches event(s).\n   */\n  dispatch(event: any | any[]): Observable<any> {\n    let result;\n    if (Array.isArray(event)) {\n      result = forkJoin(event.map(a => this._dispatch(a)));\n    } else {\n      result = this._dispatch(event);\n    }\n\n    result.pipe(\n      catchError(err => {\n        // handle error through angular error system\n        this._errorHandler.handleError(err);\n        return of(err);\n      })\n    );\n\n    return result;\n  }\n\n  /**\n   * Selects a slice of data from the store.\n   */\n  select<T>(selector: (state: any) => T): Observable<T>;\n  select(selector: string | any): Observable<any>;\n  select(selector: any): Observable<any> {\n    if (selector[META_KEY] && selector[META_KEY].path) {\n      const getter = fastPropGetter(selector[META_KEY].path.split('.'));\n      return this._stateStream.pipe(map(getter), distinctUntilChanged());\n    }\n\n    return this._stateStream.pipe(map(selector), distinctUntilChanged());\n  }\n\n  /**\n   * Select one slice of data from the store.\n   */\n  selectOnce<T>(selector: (state: any) => T): Observable<T>;\n  selectOnce(selector: string | any): Observable<any>;\n  selectOnce(selector: any): Observable<any> {\n    return this.select(selector).pipe(take(1));\n  }\n\n  /**\n   * Allow the user to subscribe to the root of the state\n   */\n  subscribe(fn?: any): Subscription {\n    return this._stateStream.subscribe(fn);\n  }\n\n  private _dispatch(action): Observable<any> {\n    const prevState = this._stateStream.getValue();\n    const plugins = this._pluginManager.plugins;\n\n    return compose([\n      ...plugins,\n      (nextState, nextAction) => {\n        if (nextState !== prevState) {\n          this._stateStream.next(nextState);\n        }\n\n        this._actions.next(nextAction);\n\n        return this._dispatchActions(nextAction).pipe(map(() => this._stateStream.getValue()));\n      }\n    ])(prevState, action);\n  }\n\n  private _dispatchActions(action): Observable<any> {\n    const results = this._storeFactory.invokeActions(\n      () => this._stateStream.getValue(),\n      newState => this._stateStream.next(newState),\n      actions => this.dispatch(actions),\n      action\n    );\n\n    return results.length ? forkJoin(this._handleNesting(results)) : of({}).pipe(take(1));\n  }\n\n  private _handleNesting(eventResults): Observable<any>[] {\n    const results = [];\n    for (let eventResult of eventResults) {\n      if (eventResult instanceof Promise) {\n        eventResult = fromPromise(eventResult);\n      }\n\n      if (eventResult instanceof Observable) {\n        results.push(eventResult);\n      }\n    }\n    return results;\n  }\n}\n",
    "import { Injectable } from '@angular/core';\n\nimport { Store } from './store';\nimport { fastPropGetter } from './internals';\nimport { META_KEY } from './symbols';\n\n@Injectable()\nexport class SelectFactory {\n  static store: Store | undefined = undefined;\n  constructor(store: Store) {\n    SelectFactory.store = store;\n  }\n}\n\n/**\n * Decorator for selecting a slice of state from the store.\n */\nexport function Select(selectorOrFeature?, ...paths: string[]) {\n  return function(target: any, name: string) {\n    const selectorFnName = '__' + name + '__selector';\n\n    if (!selectorOrFeature) {\n      // if foo$ => make it just foo\n      selectorOrFeature = name.lastIndexOf('$') === name.length - 1 ? name.substring(0, name.length - 1) : name;\n    }\n\n    const createSelect = fn => {\n      const store = SelectFactory.store;\n\n      if (!store) {\n        throw new Error('SelectFactory not connected to store!');\n      }\n\n      return store.select(fn);\n    };\n\n    const createSelector = () => {\n      if (typeof selectorOrFeature === 'string') {\n        const propsArray = paths.length ? [selectorOrFeature, ...paths] : selectorOrFeature.split('.');\n\n        return fastPropGetter(propsArray);\n      } else if (selectorOrFeature[META_KEY] && selectorOrFeature[META_KEY].path) {\n        return fastPropGetter(selectorOrFeature[META_KEY].path.split('.'));\n      } else {\n        return selectorOrFeature;\n      }\n    };\n\n    if (target[selectorFnName]) {\n      throw new Error('You cannot use @Select decorator and a ' + selectorFnName + ' property.');\n    }\n\n    if (delete target[name]) {\n      Object.defineProperty(target, selectorFnName, {\n        writable: true,\n        enumerable: false,\n        configurable: true\n      });\n\n      Object.defineProperty(target, name, {\n        get: function() {\n          return this[selectorFnName] || (this[selectorFnName] = createSelect.apply(this, [createSelector()]));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n}\n",
    "export class InitState {\n  static readonly type = '@@INIT';\n}\n",
    "import { NgModule, ModuleWithProviders, Optional, Inject } from '@angular/core';\n\nimport { ROOT_STATE_TOKEN, FEATURE_STATE_TOKEN } from './symbols';\nimport { StateFactory } from './state-factory';\nimport { Actions } from './actions-stream';\nimport { Store } from './store';\nimport { SelectFactory } from './select';\nimport { StateStream } from './state-stream';\nimport { PluginManager } from './plugin-manager';\nimport { InitState } from './actions/init';\n\n@NgModule()\nexport class NgxsRootModule {\n  constructor(\n    private _factory: StateFactory,\n    private _stateStream: StateStream,\n    store: Store,\n    select: SelectFactory,\n    @Optional()\n    @Inject(ROOT_STATE_TOKEN)\n    states: any[]\n  ) {\n    this.initStates(states);\n    store.dispatch(new InitState());\n  }\n\n  initStates(states) {\n    if (states) {\n      // add stores to the state graph and return their defaults\n      const init = this._factory.addAndReturnDefaults(states);\n\n      // get our current stream\n      const cur = this._stateStream.getValue();\n\n      // set the state to the current + new\n      this._stateStream.next({ ...cur, ...init });\n    }\n  }\n}\n\n@NgModule({})\nexport class NgxsFeatureModule {\n  constructor(\n    root: NgxsRootModule,\n    store: Store,\n    private _stateStream: StateStream,\n    private _factory: StateFactory,\n    @Optional()\n    @Inject(FEATURE_STATE_TOKEN)\n    states: any[][]\n  ) {\n    // since FEATURE_STATE_TOKEN is a multi token, we need to flatten it [[Feature1State, Feature2State], [Feature3State]]\n    const flattenedStates = ([] as any[]).concat(...states);\n    this.initStates(flattenedStates);\n  }\n\n  initStates(stores) {\n    if (stores) {\n      // bind the stores\n      const init = this._factory.addAndReturnDefaults(stores);\n\n      // get our current stream\n      const cur = this._stateStream.getValue();\n\n      // set the state to the current + new\n      this._stateStream.next({ ...cur, ...init });\n    }\n  }\n}\n\n@NgModule({})\nexport class NgxsModule {\n  static forRoot(states: any[] = []): ModuleWithProviders {\n    return {\n      ngModule: NgxsRootModule,\n      providers: [\n        StateFactory,\n        Actions,\n        Store,\n        StateStream,\n        SelectFactory,\n        PluginManager,\n        ...states,\n        {\n          provide: ROOT_STATE_TOKEN,\n          useValue: states\n        }\n      ]\n    };\n  }\n\n  static forFeature(states: any[]): ModuleWithProviders {\n    return {\n      ngModule: NgxsFeatureModule,\n      providers: [\n        StateFactory,\n        PluginManager,\n        ...states,\n        {\n          provide: FEATURE_STATE_TOKEN,\n          multi: true,\n          useValue: states\n        }\n      ]\n    };\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\n/**\n * Interface for the redux-devtools-extension API.\n */\nexport interface NgxsDevtoolsExtension {\n  init(state);\n  send(action: any, state?: any);\n  subscribe(fn: (message: NgxsDevtoolsAction) => void);\n}\n\nexport interface NgxsDevtoolsAction {\n  type: string;\n  payload: any;\n  state: any;\n  id: number;\n  source: string;\n}\n\nexport interface NgxsDevtoolsOptions {\n  /**\n   * Whether the dev tools is enabled or note. Useful for setting during production.\n   */\n  disabled?: boolean;\n\n  /**\n   * Max number of entiries to keep.\n   */\n  maxAge?: number;\n\n  /**\n   * Reformat actions before sending to dev tools\n   */\n  actionSanitizer?: (action: any) => void;\n\n  /**\n   * Reformat state before sending to devtools\n   */\n  stateSanitizer?: (state: any) => void;\n}\n\nexport const NGXS_DEVTOOLS_OPTIONS = new InjectionToken('NGXS_DEVTOOLS_OPTIONS');\n",
    "import { NgxsPlugin } from '../../symbols';\nimport { getTypeFromInstance } from '../../internals';\nimport { Injectable, Inject } from '@angular/core';\nimport { NgxsDevtoolsExtension, NgxsDevtoolsOptions, NGXS_DEVTOOLS_OPTIONS, NgxsDevtoolsAction } from './symbols';\nimport { StateStream } from '../../state-stream';\n\n/**\n * Adds support for the Redux Devtools extension:\n * http://extension.remotedev.io/\n */\n@Injectable()\nexport class NgxsReduxDevtoolsPlugin implements NgxsPlugin {\n  private readonly devtoolsExtension: NgxsDevtoolsExtension | null = null;\n  private readonly windowObj: any = typeof window !== 'undefined' ? window : {};\n\n  constructor(@Inject(NGXS_DEVTOOLS_OPTIONS) private _options: NgxsDevtoolsOptions, private _state: StateStream) {\n    const globalDevtools = this.windowObj['__REDUX_DEVTOOLS_EXTENSION__'] || this.windowObj['devToolsExtension'];\n\n    if (globalDevtools) {\n      this.devtoolsExtension = globalDevtools.connect({\n        name: 'NGXS',\n        maxAge: _options.maxAge,\n        actionSanitizer: _options.actionSanitizer,\n        stateSanitizer: _options.stateSanitizer\n      }) as NgxsDevtoolsExtension;\n\n      this.devtoolsExtension.subscribe(a => this.dispatched(a));\n    }\n  }\n\n  /**\n   * Middleware handle function\n   */\n  handle(state: any, action: any, next: any) {\n    const isDisabled = this._options && this._options.disabled;\n    if (!this.devtoolsExtension || isDisabled) {\n      return next(state, action);\n    }\n\n    // process the state\n    const res = next(state, action);\n\n    res.subscribe(newState => {\n      // if init action, send initial state to dev tools\n      const isInitAction = getTypeFromInstance(action) === '@@INIT';\n      if (isInitAction) {\n        this.devtoolsExtension.init(state);\n      } else {\n        const type = getTypeFromInstance(action);\n        this.devtoolsExtension.send({ type, payload: action.payload }, newState);\n      }\n    });\n\n    return res;\n  }\n\n  /**\n   * Handle the action from the dev tools subscription\n   */\n  dispatched(action: NgxsDevtoolsAction) {\n    if (action.type === 'DISPATCH') {\n      if (action.payload.type === 'JUMP_TO_ACTION' || action.payload.type === 'JUMP_TO_STATE') {\n        const prevState = JSON.parse(action.state);\n        this._state.next(prevState);\n      } else if (action.payload.type === 'TOGGLE_ACTION') {\n        // TODO\n      }\n    } else if (action.type === 'ACTION') {\n      // TODO\n      // const actionPayload = JSON.parse(action.payload);\n      // this._store.dispatch(actionPayload);\n    }\n  }\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NGXS_PLUGINS } from '../../symbols';\nimport { NgxsDevtoolsOptions, NGXS_DEVTOOLS_OPTIONS } from './symbols';\nimport { NgxsReduxDevtoolsPlugin } from './devtools.plugin';\nimport { NgxsModule } from '../../module';\n\n@NgModule({\n  imports: [NgxsModule]\n})\nexport class NgxsReduxDevtoolsPluginModule {\n  static forRoot(options?: NgxsDevtoolsOptions): ModuleWithProviders {\n    return {\n      ngModule: NgxsReduxDevtoolsPluginModule,\n      providers: [\n        { provide: NGXS_PLUGINS, useClass: NgxsReduxDevtoolsPlugin, multi: true },\n        { provide: NGXS_DEVTOOLS_OPTIONS, useValue: options ? options : {} }\n      ]\n    };\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\nexport interface NgxsLoggerPluginOptions {\n  /** Auto expand logged actions  */\n  collapsed: boolean;\n\n  /** Provide alternate console.log implementation */\n  logger: any;\n}\n\nexport const NGXS_LOGGER_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOGGER_PLUGIN_OPTIONS');\n",
    "export const repeat = (str, times) => new Array(times + 1).join(str);\nexport const pad = (num, maxLength) => repeat('0', maxLength - num.toString().length) + num;\n",
    "import { Injectable, Inject } from '@angular/core';\nimport { NgxsPlugin } from '../../symbols';\nimport { NGXS_LOGGER_PLUGIN_OPTIONS, NgxsLoggerPluginOptions } from './symbols';\nimport { pad } from './internals';\nimport { getTypeFromInstance } from '../../internals';\n\n@Injectable()\nexport class NgxsLoggerPlugin implements NgxsPlugin {\n  constructor(@Inject(NGXS_LOGGER_PLUGIN_OPTIONS) private _options: NgxsLoggerPluginOptions) {}\n\n  handle(state, event, next) {\n    const options = this._options || <any>{};\n    const logger = options.logger || console;\n    const actionName = getTypeFromInstance(event);\n    const time = new Date();\n\n    // tslint:disable-next-line\n    const formattedTime = ` @ ${pad(time.getHours(), 2)}:${pad(time.getMinutes(), 2)}:${pad(\n      time.getSeconds(),\n      2\n    )}.${pad(time.getMilliseconds(), 3)}`;\n\n    const message = `action ${actionName}${formattedTime}`;\n    const startMessage = options.collapsed ? logger.groupCollapsed : logger.group;\n\n    try {\n      startMessage.call(logger, message);\n    } catch (e) {\n      console.log(message);\n    }\n\n    if (typeof event.payload !== 'undefined') {\n      logger.log('%c payload', 'color: #9E9E9E; font-weight: bold', event.payload);\n    }\n\n    logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', state);\n\n    const res = next(state, event);\n\n    res.subscribe(nextState => {\n      logger.log('%c next state', 'color: #4CAF50; font-weight: bold', nextState);\n      try {\n        logger.groupEnd();\n      } catch (e) {\n        logger.log('—— log end ——');\n      }\n    });\n\n    return res;\n  }\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\nimport { NGXS_PLUGINS } from '../../symbols';\nimport { NgxsLoggerPlugin } from './logger.plugin';\n\n@NgModule()\nexport class NgxsLoggerPluginModule {\n  static forRoot(options: NgxsLoggerPluginOptions): ModuleWithProviders {\n    return {\n      ngModule: NgxsLoggerPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsLoggerPlugin,\n          multi: true\n        },\n        {\n          provide: NGXS_LOGGER_PLUGIN_OPTIONS,\n          useValue: {\n            ...{\n              logger: console,\n              collapsed: false\n            },\n            ...options\n          }\n        }\n      ]\n    };\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\nexport interface NgxsLocalStoragePluginOptions {\n  /**\n   * Key for the state slice to store in the storage engine.\n   */\n  key?: string | string[] | undefined;\n\n  /**\n   * Storage engine to use. Deaults to localStorage but can provide\n   * sessionStorage or anything that implements those interfaces.\n   */\n  storage?: any;\n\n  /**\n   * Serailizer for the object before its pushed into the engine.\n   */\n  serialize?(obj: any);\n\n  /**\n   * Deserializer for the object before its pulled out of the engine.\n   */\n  deserialize?(obj: any);\n}\n\nexport const NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOCAL_STORAGE_PLUGIN_OPTION');\n",
    "import { Inject, Injectable } from '@angular/core';\nimport { NgxsPlugin } from '../../symbols';\nimport { NgxsLocalStoragePluginOptions, NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS } from './symbols';\nimport { getTypeFromInstance, setValue, getValue } from '../../internals';\n\n@Injectable()\nexport class NgxsLocalStoragePlugin implements NgxsPlugin {\n  constructor(@Inject(NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS) private _options: NgxsLocalStoragePluginOptions) {}\n\n  handle(state, event, next) {\n    const options = this._options || <any>{};\n    const isInitAction = getTypeFromInstance(event) === '@@INIT';\n    const keys = Array.isArray(options.key) ? options.key : [options.key];\n    const engine = options.storage || localStorage;\n\n    if (isInitAction) {\n      for (const key of keys) {\n        let val = engine.getItem(key);\n\n        if (val !== 'undefined' && val !== null) {\n          val = options.deserialize(val);\n\n          if (key !== '@@STATE') {\n            state = setValue(state, key, val);\n          } else {\n            state = val;\n          }\n        }\n      }\n    }\n\n    const res = next(state, event);\n\n    res.subscribe(nextState => {\n      if (!isInitAction) {\n        for (const key of keys) {\n          let val = nextState;\n\n          if (key !== '@@STATE') {\n            val = getValue(nextState, key);\n          }\n\n          engine.setItem(key, options.serialize(val));\n        }\n      }\n    });\n\n    return res;\n  }\n}\n",
    "/**\n * Default serialize function\n */\nexport function serialize(val: any) {\n  return JSON.stringify(val);\n}\n\n/**\n * Default deserialize function\n */\nexport function deserialize(val: any) {\n  return JSON.parse(val);\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NGXS_PLUGINS } from '../../symbols';\nimport { NgxsLocalStoragePlugin } from './localstorage.plugin';\nimport { serialize, deserialize } from './utils';\nimport { NgxsLocalStoragePluginOptions, NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS } from './symbols';\n\n@NgModule()\nexport class NgxsLocalStoragePluginModule {\n  static forRoot(options: NgxsLocalStoragePluginOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: NgxsLocalStoragePluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsLocalStoragePlugin,\n          multi: true\n        },\n        {\n          provide: NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS,\n          useValue: {\n            key: options.key || '@@STATE',\n            storage: localStorage,\n            serialize: options.serialize || serialize,\n            deserialize: options.deserialize || deserialize\n          }\n        }\n      ]\n    };\n  }\n}\n",
    "import { ensureStoreMetadata, getTypeFromKlass } from './internals';\n\n/**\n * Decorates a method with a action information.\n */\nexport function Action(actions: any | any[]) {\n  return function(target: any, name: string, descriptor: TypedPropertyDescriptor<any>) {\n    const meta = ensureStoreMetadata(target.constructor);\n\n    if (!Array.isArray(actions)) {\n      actions = [actions];\n    }\n\n    for (const action of actions) {\n      const type = getTypeFromKlass(action);\n      if (!meta.actions[type]) {\n        meta.actions[type] = [];\n      }\n\n      meta.actions[type].push({\n        fn: name,\n        type\n      });\n    }\n  };\n}\n",
    "import { ensureStoreMetadata } from './internals';\nimport { StoreOptions, META_KEY } from './symbols';\n\n/**\n * Decorates a class with ngxs state information.\n */\nexport function State<T>(options: StoreOptions<T>) {\n  return function(target: any) {\n    const meta = ensureStoreMetadata(target);\n\n    // Handle inheritance\n    if (target.__proto__.hasOwnProperty(META_KEY)) {\n      const parentMeta = target.__proto__[META_KEY];\n\n      meta.actions = {\n        ...meta.actions,\n        ...parentMeta.actions\n      };\n    }\n\n    meta.children = options.children;\n    meta.defaults = options.defaults;\n    meta.name = options.name;\n\n    if (!options.name) {\n      throw new Error(`States must register a 'name' property`);\n    }\n  };\n}\n",
    "import { filter } from 'rxjs/operators';\nimport { OperatorFunction } from 'rxjs/interfaces';\n\nexport function ofAction<T>(allowedType): OperatorFunction<any, T>;\nexport function ofAction<T>(...allowedTypes): OperatorFunction<any, T>;\n\n/**\n * RxJS operator for selecting out specific actions.\n */\nexport function ofAction(...allowedTypes: any[]): OperatorFunction<any, any> {\n  const allowedMap = {};\n  allowedTypes.forEach(klass => (allowedMap[klass.type || klass.name] = true));\n  return filter(action => {\n    return allowedMap[action.constructor.type || action.constructor.name];\n  });\n}\n",
    "import { memoize } from './memoize';\nimport { META_KEY } from './symbols';\nimport { getValue } from './internals';\n\n/**\n * Decorator for memoizing a state selector.\n */\nexport function Selector(...args) {\n  return (target: any, key: string, descriptor: PropertyDescriptor) => {\n    const metadata = target[META_KEY];\n    if (descriptor.value !== null) {\n      const prev = descriptor.value;\n\n      const fn = state => {\n        const local = getValue(state, metadata.path);\n        return prev(local);\n      };\n\n      return {\n        configurable: true,\n        get() {\n          return memoize.apply(null, [fn, ...args]);\n        }\n      };\n    } else {\n      throw new Error('Selectors only work on methods');\n    }\n  };\n}\n",
    "/**\n * Memoize a function.\n * Oringinally from: https://github.com/lodash/lodash/blob/master/memoize.js with some modifications\n */\nexport function memoize(func, resolver?) {\n  const memoized: any = function(...args) {\n    const key = resolver ? resolver.apply(this, args) : args[0];\n    const cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    const result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new WeakMap();\n\n  return memoized;\n}\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "__values",
    "o",
    "m",
    "Symbol",
    "iterator",
    "i",
    "call",
    "next",
    "length",
    "value",
    "done",
    "__read",
    "n",
    "r",
    "e",
    "ar",
    "push",
    "error",
    "__spread",
    "arguments",
    "concat",
    "ROOT_STATE_TOKEN",
    "InjectionToken",
    "FEATURE_STATE_TOKEN",
    "META_KEY",
    "NGXS_PLUGINS",
    "ensureStoreMetadata",
    "target",
    "defineProperty",
    "name",
    "actions",
    "defaults",
    "path",
    "children",
    "fastPropGetter",
    "paths",
    "segments",
    "seg",
    "l",
    "expr",
    "Function",
    "getTypeFromInstance",
    "event",
    "type",
    "setValue",
    "obj",
    "prop",
    "val",
    "assign",
    "split",
    "last",
    "reduce",
    "acc",
    "part",
    "getValue",
    "StateFactory",
    "_injector",
    "_parentFactory",
    "_states",
    "get",
    "states",
    "add",
    "isArray",
    "findName",
    "graph",
    "sorted",
    "visited",
    "visit",
    "stateGraph",
    "klass",
    "meta",
    "find",
    "g",
    "Error",
    "result",
    "_a",
    "map",
    "sortedStates",
    "ancestors",
    "forEach",
    "dep",
    "indexOf",
    "join",
    "slice",
    "keys",
    "k",
    "reverse",
    "depths",
    "newObj",
    "child",
    "keyToFind",
    "key",
    "parent",
    "findFullParentPath",
    "nameGraph",
    "mappedStores",
    "_loop_1",
    "depth",
    "this_1",
    "s",
    "undefined",
    "instance",
    "sortedStates_1",
    "tslib_1.__values",
    "sortedStates_1_1",
    "_b",
    "apply",
    "addAndReturnDefaults",
    "stores",
    "invokeActions",
    "getState",
    "setState",
    "dispatch",
    "action",
    "results",
    "_loop_2",
    "metadata",
    "actionMetas",
    "actionMetas_1",
    "actionMetas_1_1",
    "actionMeta",
    "stateContext",
    "state",
    "patchState",
    "local",
    "fn",
    "Injectable",
    "Injector",
    "decorators",
    "Optional",
    "SkipSelf",
    "Actions",
    "_super",
    "_this",
    "tslib_1.__extends",
    "BehaviorSubject",
    "compose",
    "funcs",
    "args",
    "_i",
    "shift",
    "nextArgs",
    "StateStream",
    "PluginManager",
    "_parentManager",
    "_plugins",
    "plugins",
    "register",
    "plugin",
    "handle",
    "bind",
    "Inject",
    "Store",
    "_errorHandler",
    "_actions",
    "_storeFactory",
    "_stateStream",
    "_pluginManager",
    "forkJoin",
    "a",
    "_dispatch",
    "pipe",
    "catchError",
    "err",
    "handleError",
    "of",
    "select",
    "selector",
    "getter",
    "distinctUntilChanged",
    "selectOnce",
    "take",
    "subscribe",
    "prevState",
    "nextState",
    "nextAction",
    "_dispatchActions",
    "newState",
    "_handleNesting",
    "eventResults",
    "eventResults_1",
    "eventResults_1_1",
    "eventResult",
    "Promise",
    "fromPromise",
    "Observable",
    "ErrorHandler",
    "SelectFactory",
    "store",
    "InitState",
    "NgxsRootModule",
    "_factory",
    "initStates",
    "init",
    "cur",
    "NgModule",
    "NgxsFeatureModule",
    "root",
    "flattenedStates",
    "NgxsModule",
    "forRoot",
    "ngModule",
    "providers",
    "provide",
    "useValue",
    "forFeature",
    "multi",
    "NGXS_DEVTOOLS_OPTIONS",
    "NgxsReduxDevtoolsPlugin",
    "_options",
    "_state",
    "devtoolsExtension",
    "windowObj",
    "window",
    "globalDevtools",
    "connect",
    "maxAge",
    "actionSanitizer",
    "stateSanitizer",
    "dispatched",
    "isDisabled",
    "disabled",
    "res",
    "send",
    "payload",
    "JSON",
    "parse",
    "NgxsReduxDevtoolsPluginModule",
    "options",
    "useClass",
    "imports",
    "NGXS_LOGGER_PLUGIN_OPTIONS",
    "pad",
    "num",
    "maxLength",
    "str",
    "times",
    "toString",
    "NgxsLoggerPlugin",
    "logger",
    "console",
    "actionName",
    "time",
    "Date",
    "message",
    "getHours",
    "getMinutes",
    "getSeconds",
    "getMilliseconds",
    "startMessage",
    "collapsed",
    "groupCollapsed",
    "group",
    "log",
    "groupEnd",
    "NgxsLoggerPluginModule",
    "NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS",
    "NgxsLocalStoragePlugin",
    "isInitAction",
    "engine",
    "storage",
    "localStorage",
    "keys_1",
    "keys_1_1",
    "getItem",
    "deserialize",
    "keys_2",
    "keys_2_1",
    "setItem",
    "serialize",
    "stringify",
    "NgxsLocalStoragePluginModule",
    "descriptor",
    "actions_1",
    "actions_1_1",
    "parentMeta",
    "selectorOrFeature",
    "selectorFnName",
    "lastIndexOf",
    "substring",
    "writable",
    "enumerable",
    "configurable",
    "allowedTypes",
    "allowedMap",
    "filter",
    "prev_1",
    "fn_1",
    "func",
    "resolver",
    "memoized",
    "cache",
    "has",
    "set",
    "WeakMap"
  ],
  "mappings": "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"
}
