{
  "version": 3,
  "file": "ngxs-api.js",
  "sources": [
    "ng://ngxs/out/plugins/localstorage/localstorage.module.ts",
    "ng://ngxs/out/plugins/localstorage/utils.ts",
    "ng://ngxs/out/plugins/localstorage/localstorage.plugin.ts",
    "ng://ngxs/out/plugins/localstorage/symbols.ts",
    "ng://ngxs/out/plugins/logger/logger.module.ts",
    "ng://ngxs/out/plugins/logger/logger.plugin.ts",
    "ng://ngxs/out/plugins/logger/internals.ts",
    "ng://ngxs/out/plugins/logger/symbols.ts",
    "ng://ngxs/out/plugins/devtools/devtools.module.ts",
    "ng://ngxs/out/plugins/devtools/devtools.plugin.ts",
    "ng://ngxs/out/plugins/devtools/symbols.ts",
    "ng://ngxs/out/selector.ts",
    "ng://ngxs/out/memoize.ts",
    "ng://ngxs/out/of-action.ts",
    "ng://ngxs/out/state.ts",
    "ng://ngxs/out/action.ts",
    "ng://ngxs/out/module.ts",
    "ng://ngxs/out/actions/init.ts",
    "ng://ngxs/out/select.ts",
    "ng://ngxs/out/store.ts",
    "ng://ngxs/out/plugin-manager.ts",
    "ng://ngxs/out/state-stream.ts",
    "ng://ngxs/out/compose.ts",
    "ng://ngxs/out/actions-stream.ts",
    "ng://ngxs/out/state-factory.ts",
    "ng://ngxs/out/internals.ts",
    "ng://ngxs/out/symbols.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { NGXS_PLUGINS } from '../../symbols';\nimport { NgxsLocalStoragePlugin } from './localstorage.plugin';\nimport { serialize, deserialize } from './utils';\nimport { NgxsLocalStoragePluginOptions, NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS } from './symbols';\n\n@NgModule()\nexport class NgxsLocalStoragePluginModule {\n  static forRoot(options: NgxsLocalStoragePluginOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: NgxsLocalStoragePluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsLocalStoragePlugin,\n          multi: true\n        },\n        {\n          provide: NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS,\n          useValue: {\n            key: options.key || '@@STATE',\n            storage: localStorage,\n            serialize: options.serialize || serialize,\n            deserialize: options.deserialize || deserialize\n          }\n        }\n      ]\n    };\n  }\n}\n",
    "/**\n * Default serialize function\n */\nexport function serialize(val: any) {\n  return JSON.stringify(val);\n}\n\n/**\n * Default deserialize function\n */\nexport function deserialize(val: any) {\n  return JSON.parse(val);\n}\n",
    "import { Inject, Injectable } from '@angular/core';\nimport { NgxsPlugin } from '../../symbols';\nimport { NgxsLocalStoragePluginOptions, NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS } from './symbols';\nimport { getTypeFromInstance, setValue, getValue } from '../../internals';\n\n@Injectable()\nexport class NgxsLocalStoragePlugin implements NgxsPlugin {\n  constructor(@Inject(NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS) private _options: NgxsLocalStoragePluginOptions) {}\n\n  handle(state, event, next) {\n    const options = this._options || <any>{};\n    const isInitAction = getTypeFromInstance(event) === '@@INIT';\n    const keys = Array.isArray(options.key) ? options.key : [options.key];\n    const engine = options.storage || localStorage;\n\n    if (isInitAction) {\n      for (const key of keys) {\n        let val = engine.getItem(key);\n\n        if (val !== 'undefined' && val !== null) {\n          val = options.deserialize(val);\n\n          if (key !== '@@STATE') {\n            state = setValue(state, key, val);\n          } else {\n            state = val;\n          }\n        }\n      }\n    }\n\n    const res = next(state, event);\n\n    res.subscribe(nextState => {\n      if (!isInitAction) {\n        for (const key of keys) {\n          let val = nextState;\n\n          if (key !== '@@STATE') {\n            val = getValue(nextState, key);\n          }\n\n          engine.setItem(key, options.serialize(val));\n        }\n      }\n    });\n\n    return res;\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\nexport interface NgxsLocalStoragePluginOptions {\n  /**\n   * Key for the state slice to store in the storage engine.\n   */\n  key?: string | string[] | undefined;\n\n  /**\n   * Storage engine to use. Deaults to localStorage but can provide\n   * sessionStorage or anything that implements those interfaces.\n   */\n  storage?: any;\n\n  /**\n   * Serailizer for the object before its pushed into the engine.\n   */\n  serialize?(obj: any);\n\n  /**\n   * Deserializer for the object before its pulled out of the engine.\n   */\n  deserialize?(obj: any);\n}\n\nexport const NGXS_LOCAL_STORAGE_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOCAL_STORAGE_PLUGIN_OPTION');\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\nimport { NGXS_PLUGINS } from '../../symbols';\nimport { NgxsLoggerPlugin } from './logger.plugin';\n\n@NgModule()\nexport class NgxsLoggerPluginModule {\n  static forRoot(options: NgxsLoggerPluginOptions): ModuleWithProviders {\n    return {\n      ngModule: NgxsLoggerPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsLoggerPlugin,\n          multi: true\n        },\n        {\n          provide: NGXS_LOGGER_PLUGIN_OPTIONS,\n          useValue: {\n            ...{\n              logger: console,\n              collapsed: false\n            },\n            ...options\n          }\n        }\n      ]\n    };\n  }\n}\n",
    "import { Injectable, Inject } from '@angular/core';\nimport { NgxsPlugin } from '../../symbols';\nimport { NGXS_LOGGER_PLUGIN_OPTIONS, NgxsLoggerPluginOptions } from './symbols';\nimport { pad } from './internals';\nimport { getTypeFromInstance } from '../../internals';\n\n@Injectable()\nexport class NgxsLoggerPlugin implements NgxsPlugin {\n  constructor(@Inject(NGXS_LOGGER_PLUGIN_OPTIONS) private _options: NgxsLoggerPluginOptions) {}\n\n  handle(state, event, next) {\n    const options = this._options || <any>{};\n    const logger = options.logger || console;\n    const actionName = getTypeFromInstance(event);\n    const time = new Date();\n\n    // tslint:disable-next-line\n    const formattedTime = ` @ ${pad(time.getHours(), 2)}:${pad(time.getMinutes(), 2)}:${pad(\n      time.getSeconds(),\n      2\n    )}.${pad(time.getMilliseconds(), 3)}`;\n\n    const message = `action ${actionName}${formattedTime}`;\n    const startMessage = options.collapsed ? logger.groupCollapsed : logger.group;\n\n    try {\n      startMessage.call(logger, message);\n    } catch (e) {\n      console.log(message);\n    }\n\n    if (typeof event.payload !== 'undefined') {\n      logger.log('%c payload', 'color: #9E9E9E; font-weight: bold', event.payload);\n    }\n\n    logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', state);\n\n    const res = next(state, event);\n\n    res.subscribe(nextState => {\n      logger.log('%c next state', 'color: #4CAF50; font-weight: bold', nextState);\n      try {\n        logger.groupEnd();\n      } catch (e) {\n        logger.log('—— log end ——');\n      }\n    });\n\n    return res;\n  }\n}\n",
    "export const repeat = (str, times) => new Array(times + 1).join(str);\nexport const pad = (num, maxLength) => repeat('0', maxLength - num.toString().length) + num;\n",
    "import { InjectionToken } from '@angular/core';\n\nexport interface NgxsLoggerPluginOptions {\n  /** Auto expand logged actions  */\n  collapsed: boolean;\n\n  /** Provide alternate console.log implementation */\n  logger: any;\n}\n\nexport const NGXS_LOGGER_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOGGER_PLUGIN_OPTIONS');\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NGXS_PLUGINS } from '../../symbols';\nimport { NgxsDevtoolsOptions, NGXS_DEVTOOLS_OPTIONS } from './symbols';\nimport { NgxsReduxDevtoolsPlugin } from './devtools.plugin';\nimport { NgxsModule } from '../../module';\n\n@NgModule({\n  imports: [NgxsModule]\n})\nexport class NgxsReduxDevtoolsPluginModule {\n  static forRoot(options?: NgxsDevtoolsOptions): ModuleWithProviders {\n    return {\n      ngModule: NgxsReduxDevtoolsPluginModule,\n      providers: [\n        { provide: NGXS_PLUGINS, useClass: NgxsReduxDevtoolsPlugin, multi: true },\n        { provide: NGXS_DEVTOOLS_OPTIONS, useValue: options ? options : {} }\n      ]\n    };\n  }\n}\n",
    "import { NgxsPlugin } from '../../symbols';\nimport { getTypeFromInstance } from '../../internals';\nimport { Injectable, Inject } from '@angular/core';\nimport { NgxsDevtoolsExtension, NgxsDevtoolsOptions, NGXS_DEVTOOLS_OPTIONS, NgxsDevtoolsAction } from './symbols';\nimport { StateStream } from '../../state-stream';\n\n/**\n * Adds support for the Redux Devtools extension:\n * http://extension.remotedev.io/\n */\n@Injectable()\nexport class NgxsReduxDevtoolsPlugin implements NgxsPlugin {\n  private readonly devtoolsExtension: NgxsDevtoolsExtension | null = null;\n  private readonly windowObj: any = typeof window !== 'undefined' ? window : {};\n\n  constructor(@Inject(NGXS_DEVTOOLS_OPTIONS) private _options: NgxsDevtoolsOptions, private _state: StateStream) {\n    const globalDevtools = this.windowObj['__REDUX_DEVTOOLS_EXTENSION__'] || this.windowObj['devToolsExtension'];\n\n    if (globalDevtools) {\n      this.devtoolsExtension = globalDevtools.connect({\n        name: 'NGXS',\n        maxAge: _options.maxAge,\n        actionSanitizer: _options.actionSanitizer,\n        stateSanitizer: _options.stateSanitizer\n      }) as NgxsDevtoolsExtension;\n\n      this.devtoolsExtension.subscribe(a => this.dispatched(a));\n    }\n  }\n\n  /**\n   * Middleware handle function\n   */\n  handle(state: any, action: any, next: any) {\n    const isDisabled = this._options && this._options.disabled;\n    if (!this.devtoolsExtension || isDisabled) {\n      return next(state, action);\n    }\n\n    // process the state\n    const res = next(state, action);\n\n    res.subscribe(newState => {\n      // if init action, send initial state to dev tools\n      const isInitAction = getTypeFromInstance(action) === '@@INIT';\n      if (isInitAction) {\n        this.devtoolsExtension.init(state);\n      } else {\n        const type = getTypeFromInstance(action);\n        this.devtoolsExtension.send({ type, payload: action.payload }, newState);\n      }\n    });\n\n    return res;\n  }\n\n  /**\n   * Handle the action from the dev tools subscription\n   */\n  dispatched(action: NgxsDevtoolsAction) {\n    if (action.type === 'DISPATCH') {\n      if (action.payload.type === 'JUMP_TO_ACTION' || action.payload.type === 'JUMP_TO_STATE') {\n        const prevState = JSON.parse(action.state);\n        this._state.next(prevState);\n      } else if (action.payload.type === 'TOGGLE_ACTION') {\n        // TODO\n      }\n    } else if (action.type === 'ACTION') {\n      // TODO\n      // const actionPayload = JSON.parse(action.payload);\n      // this._store.dispatch(actionPayload);\n    }\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\n/**\n * Interface for the redux-devtools-extension API.\n */\nexport interface NgxsDevtoolsExtension {\n  init(state);\n  send(action: any, state?: any);\n  subscribe(fn: (message: NgxsDevtoolsAction) => void);\n}\n\nexport interface NgxsDevtoolsAction {\n  type: string;\n  payload: any;\n  state: any;\n  id: number;\n  source: string;\n}\n\nexport interface NgxsDevtoolsOptions {\n  /**\n   * Whether the dev tools is enabled or note. Useful for setting during production.\n   */\n  disabled?: boolean;\n\n  /**\n   * Max number of entiries to keep.\n   */\n  maxAge?: number;\n\n  /**\n   * Reformat actions before sending to dev tools\n   */\n  actionSanitizer?: (action: any) => void;\n\n  /**\n   * Reformat state before sending to devtools\n   */\n  stateSanitizer?: (state: any) => void;\n}\n\nexport const NGXS_DEVTOOLS_OPTIONS = new InjectionToken('NGXS_DEVTOOLS_OPTIONS');\n",
    "import { memoize } from './memoize';\nimport { META_KEY } from './symbols';\nimport { getValue } from './internals';\n\n/**\n * Decorator for memoizing a state selector.\n */\nexport function Selector(...args) {\n  return (target: any, key: string, descriptor: PropertyDescriptor) => {\n    const metadata = target[META_KEY];\n    if (descriptor.value !== null) {\n      const prev = descriptor.value;\n\n      const fn = state => {\n        const local = getValue(state, metadata.path);\n        return prev(local);\n      };\n\n      return {\n        configurable: true,\n        get() {\n          return memoize.apply(null, [fn, ...args]);\n        }\n      };\n    } else {\n      throw new Error('Selectors only work on methods');\n    }\n  };\n}\n",
    "/**\n * Memoize a function.\n * Oringinally from: https://github.com/lodash/lodash/blob/master/memoize.js with some modifications\n */\nexport function memoize(func, resolver?) {\n  const memoized: any = function(...args) {\n    const key = resolver ? resolver.apply(this, args) : args[0];\n    const cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    const result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new WeakMap();\n\n  return memoized;\n}\n",
    "import { filter } from 'rxjs/operators';\nimport { OperatorFunction } from 'rxjs/interfaces';\n\nexport function ofAction<T>(allowedType): OperatorFunction<any, T>;\nexport function ofAction<T>(...allowedTypes): OperatorFunction<any, T>;\n\n/**\n * RxJS operator for selecting out specific actions.\n */\nexport function ofAction(...allowedTypes: any[]): OperatorFunction<any, any> {\n  const allowedMap = {};\n  allowedTypes.forEach(klass => (allowedMap[klass.type || klass.name] = true));\n  return filter(action => {\n    return allowedMap[action.constructor.type || action.constructor.name];\n  });\n}\n",
    "import { ensureStoreMetadata } from './internals';\nimport { StoreOptions, META_KEY } from './symbols';\n\n/**\n * Decorates a class with ngxs state information.\n */\nexport function State<T>(options: StoreOptions<T>) {\n  return function(target: any) {\n    const meta = ensureStoreMetadata(target);\n\n    // Handle inheritance\n    if (target.__proto__.hasOwnProperty(META_KEY)) {\n      const parentMeta = target.__proto__[META_KEY];\n\n      meta.actions = {\n        ...meta.actions,\n        ...parentMeta.actions\n      };\n    }\n\n    meta.children = options.children;\n    meta.defaults = options.defaults;\n    meta.name = options.name;\n\n    if (!options.name) {\n      throw new Error(`States must register a 'name' property`);\n    }\n  };\n}\n",
    "import { ensureStoreMetadata, getTypeFromKlass } from './internals';\n\n/**\n * Decorates a method with a action information.\n */\nexport function Action(actions: any | any[]) {\n  return function(target: any, name: string, descriptor: TypedPropertyDescriptor<any>) {\n    const meta = ensureStoreMetadata(target.constructor);\n\n    if (!Array.isArray(actions)) {\n      actions = [actions];\n    }\n\n    for (const action of actions) {\n      const type = getTypeFromKlass(action);\n      if (!meta.actions[type]) {\n        meta.actions[type] = [];\n      }\n\n      meta.actions[type].push({\n        fn: name,\n        type\n      });\n    }\n  };\n}\n",
    "import { NgModule, ModuleWithProviders, Optional, Inject } from '@angular/core';\n\nimport { ROOT_STATE_TOKEN, FEATURE_STATE_TOKEN } from './symbols';\nimport { StateFactory } from './state-factory';\nimport { Actions } from './actions-stream';\nimport { Store } from './store';\nimport { SelectFactory } from './select';\nimport { StateStream } from './state-stream';\nimport { PluginManager } from './plugin-manager';\nimport { InitState } from './actions/init';\n\n@NgModule()\nexport class NgxsRootModule {\n  constructor(\n    private _factory: StateFactory,\n    private _stateStream: StateStream,\n    store: Store,\n    select: SelectFactory,\n    @Optional()\n    @Inject(ROOT_STATE_TOKEN)\n    states: any[]\n  ) {\n    this.initStates(states);\n    store.dispatch(new InitState());\n  }\n\n  initStates(states) {\n    if (states) {\n      // add stores to the state graph and return their defaults\n      const init = this._factory.addAndReturnDefaults(states);\n\n      // get our current stream\n      const cur = this._stateStream.getValue();\n\n      // set the state to the current + new\n      this._stateStream.next({ ...cur, ...init });\n    }\n  }\n}\n\n@NgModule({})\nexport class NgxsFeatureModule {\n  constructor(\n    root: NgxsRootModule,\n    store: Store,\n    private _stateStream: StateStream,\n    private _factory: StateFactory,\n    @Optional()\n    @Inject(FEATURE_STATE_TOKEN)\n    states: any[][]\n  ) {\n    // since FEATURE_STATE_TOKEN is a multi token, we need to flatten it [[Feature1State, Feature2State], [Feature3State]]\n    const flattenedStates = ([] as any[]).concat(...states);\n    this.initStates(flattenedStates);\n  }\n\n  initStates(stores) {\n    if (stores) {\n      // bind the stores\n      const init = this._factory.addAndReturnDefaults(stores);\n\n      // get our current stream\n      const cur = this._stateStream.getValue();\n\n      // set the state to the current + new\n      this._stateStream.next({ ...cur, ...init });\n    }\n  }\n}\n\n@NgModule({})\nexport class NgxsModule {\n  static forRoot(states: any[] = []): ModuleWithProviders {\n    return {\n      ngModule: NgxsRootModule,\n      providers: [\n        StateFactory,\n        Actions,\n        Store,\n        StateStream,\n        SelectFactory,\n        PluginManager,\n        ...states,\n        {\n          provide: ROOT_STATE_TOKEN,\n          useValue: states\n        }\n      ]\n    };\n  }\n\n  static forFeature(states: any[]): ModuleWithProviders {\n    return {\n      ngModule: NgxsFeatureModule,\n      providers: [\n        StateFactory,\n        PluginManager,\n        ...states,\n        {\n          provide: FEATURE_STATE_TOKEN,\n          multi: true,\n          useValue: states\n        }\n      ]\n    };\n  }\n}\n",
    "export class InitState {\n  static readonly type = '@@INIT';\n}\n",
    "import { Injectable } from '@angular/core';\n\nimport { Store } from './store';\nimport { fastPropGetter } from './internals';\nimport { META_KEY } from './symbols';\n\n@Injectable()\nexport class SelectFactory {\n  static store: Store | undefined = undefined;\n  constructor(store: Store) {\n    SelectFactory.store = store;\n  }\n}\n\n/**\n * Decorator for selecting a slice of state from the store.\n */\nexport function Select(selectorOrFeature?, ...paths: string[]) {\n  return function(target: any, name: string) {\n    const selectorFnName = '__' + name + '__selector';\n\n    if (!selectorOrFeature) {\n      // if foo$ => make it just foo\n      selectorOrFeature = name.lastIndexOf('$') === name.length - 1 ? name.substring(0, name.length - 1) : name;\n    }\n\n    const createSelect = fn => {\n      const store = SelectFactory.store;\n\n      if (!store) {\n        throw new Error('SelectFactory not connected to store!');\n      }\n\n      return store.select(fn);\n    };\n\n    const createSelector = () => {\n      if (typeof selectorOrFeature === 'string') {\n        const propsArray = paths.length ? [selectorOrFeature, ...paths] : selectorOrFeature.split('.');\n\n        return fastPropGetter(propsArray);\n      } else if (selectorOrFeature[META_KEY] && selectorOrFeature[META_KEY].path) {\n        return fastPropGetter(selectorOrFeature[META_KEY].path.split('.'));\n      } else {\n        return selectorOrFeature;\n      }\n    };\n\n    if (target[selectorFnName]) {\n      throw new Error('You cannot use @Select decorator and a ' + selectorFnName + ' property.');\n    }\n\n    if (delete target[name]) {\n      Object.defineProperty(target, selectorFnName, {\n        writable: true,\n        enumerable: false,\n        configurable: true\n      });\n\n      Object.defineProperty(target, name, {\n        get: function() {\n          return this[selectorFnName] || (this[selectorFnName] = createSelect.apply(this, [createSelector()]));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n}\n",
    "import { Injectable, ErrorHandler } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { distinctUntilChanged, catchError, take } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { map } from 'rxjs/operators/map';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { of } from 'rxjs/observable/of';\n\nimport { compose } from './compose';\nimport { Actions } from './actions-stream';\nimport { StateFactory } from './state-factory';\nimport { StateStream } from './state-stream';\nimport { PluginManager } from './plugin-manager';\nimport { fastPropGetter } from './internals';\nimport { META_KEY } from './symbols';\n\n@Injectable()\nexport class Store {\n  constructor(\n    private _errorHandler: ErrorHandler,\n    private _actions: Actions,\n    private _storeFactory: StateFactory,\n    private _stateStream: StateStream,\n    private _pluginManager: PluginManager\n  ) {}\n\n  /**\n   * Dispatches event(s).\n   */\n  dispatch(event: any | any[]): Observable<any> {\n    let result;\n    if (Array.isArray(event)) {\n      result = forkJoin(event.map(a => this._dispatch(a)));\n    } else {\n      result = this._dispatch(event);\n    }\n\n    result.pipe(\n      catchError(err => {\n        // handle error through angular error system\n        this._errorHandler.handleError(err);\n        return of(err);\n      })\n    );\n\n    return result;\n  }\n\n  /**\n   * Selects a slice of data from the store.\n   */\n  select<T>(selector: (state: any) => T): Observable<T>;\n  select(selector: string | any): Observable<any>;\n  select(selector: any): Observable<any> {\n    if (selector[META_KEY] && selector[META_KEY].path) {\n      const getter = fastPropGetter(selector[META_KEY].path.split('.'));\n      return this._stateStream.pipe(map(getter), distinctUntilChanged());\n    }\n\n    return this._stateStream.pipe(map(selector), distinctUntilChanged());\n  }\n\n  /**\n   * Select one slice of data from the store.\n   */\n  selectOnce<T>(selector: (state: any) => T): Observable<T>;\n  selectOnce(selector: string | any): Observable<any>;\n  selectOnce(selector: any): Observable<any> {\n    return this.select(selector).pipe(take(1));\n  }\n\n  /**\n   * Allow the user to subscribe to the root of the state\n   */\n  subscribe(fn?: any): Subscription {\n    return this._stateStream.subscribe(fn);\n  }\n\n  private _dispatch(action): Observable<any> {\n    const prevState = this._stateStream.getValue();\n    const plugins = this._pluginManager.plugins;\n\n    return compose([\n      ...plugins,\n      (nextState, nextAction) => {\n        if (nextState !== prevState) {\n          this._stateStream.next(nextState);\n        }\n\n        this._actions.next(nextAction);\n\n        return this._dispatchActions(nextAction).pipe(map(() => this._stateStream.getValue()));\n      }\n    ])(prevState, action);\n  }\n\n  private _dispatchActions(action): Observable<any> {\n    const results = this._storeFactory.invokeActions(\n      () => this._stateStream.getValue(),\n      newState => this._stateStream.next(newState),\n      actions => this.dispatch(actions),\n      action\n    );\n\n    return results.length ? forkJoin(this._handleNesting(results)) : of({}).pipe(take(1));\n  }\n\n  private _handleNesting(eventResults): Observable<any>[] {\n    const results = [];\n    for (let eventResult of eventResults) {\n      if (eventResult instanceof Promise) {\n        eventResult = fromPromise(eventResult);\n      }\n\n      if (eventResult instanceof Observable) {\n        results.push(eventResult);\n      }\n    }\n    return results;\n  }\n}\n",
    "import { Injectable, Optional, SkipSelf, Inject } from '@angular/core';\nimport { NgxsPluginFn, NGXS_PLUGINS, NgxsPlugin } from './symbols';\n\n@Injectable()\nexport class PluginManager {\n  plugins: NgxsPluginFn[] = [];\n\n  constructor(\n    @Optional()\n    @SkipSelf()\n    private _parentManager: PluginManager,\n    @Inject(NGXS_PLUGINS)\n    @Optional()\n    private _plugins: NgxsPlugin[]\n  ) {\n    this.register();\n  }\n\n  private register() {\n    if (!this._plugins) {\n      return;\n    }\n\n    this.plugins = this._plugins.map(plugin => {\n      if (plugin.handle) {\n        return plugin.handle.bind(plugin);\n      } else {\n        return plugin;\n      }\n    });\n\n    if (this._parentManager) {\n      this._parentManager.plugins.push(...this.plugins);\n    }\n  }\n}\n",
    "import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n/**\n * BehaviorSubject of the entire state.\n */\n@Injectable()\nexport class StateStream extends BehaviorSubject<any> {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parent: StateStream\n  ) {\n    super({});\n\n    if (parent) {\n      Object.assign(this, parent);\n    }\n  }\n}\n",
    "/**\n * Composes a array of functions from left to right. Example:\n *\n *      compose([fn, final])(state, action);\n *\n * then the funcs have a signature like:\n *\n *      function fn (state, action, next) {\n *          console.log('here', state, action, next);\n *          return next(state, action);\n *      }\n *\n *      function final (state, action) {\n *          console.log('here', state, action);\n *          return state;\n *      }\n *\n * the last function should not call `next`.\n */\nexport const compose = funcs => (...args) => {\n  const curr = funcs.shift();\n  return curr(...args, (...nextArgs) => compose(funcs)(...nextArgs));\n};\n",
    "import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n/**\n * Action stream that is emitted anytime an action is dispatched.\n * You can listen to this in services to react without stores.\n */\n@Injectable()\nexport class Actions extends BehaviorSubject<any> {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parent: Actions\n  ) {\n    super({});\n\n    if (parent) {\n      Object.assign(this, parent);\n    }\n  }\n}\n",
    "import { Injector, Injectable, SkipSelf, Optional } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { META_KEY } from './symbols';\nimport {\n  getTypeFromInstance,\n  topologicalSort,\n  buildGraph,\n  findFullParentPath,\n  nameToState,\n  setValue,\n  getValue,\n  MetaDataModel,\n  isObject\n} from './internals';\n\n@Injectable()\nexport class StateFactory {\n  get states() {\n    return this._parentFactory ? this._parentFactory.states : this._states;\n  }\n  private _states = [];\n\n  constructor(\n    private _injector: Injector,\n    @Optional()\n    @SkipSelf()\n    private _parentFactory: StateFactory\n  ) {}\n\n  add(states: any | any[]): any[] {\n    if (!Array.isArray(states)) {\n      states = [states];\n    }\n\n    const stateGraph = buildGraph(states);\n    const sortedStates = topologicalSort(stateGraph);\n    const depths = findFullParentPath(stateGraph);\n    const nameGraph = nameToState(states);\n    const mappedStores = [];\n\n    for (const name of sortedStates) {\n      const klass = nameGraph[name];\n\n      if (!klass[META_KEY]) {\n        throw new Error('States must be decorated with @State() decorator');\n      }\n\n      const depth = depths[name];\n      const { actions } = klass[META_KEY] as MetaDataModel;\n      let { defaults } = klass[META_KEY] as MetaDataModel;\n\n      (klass[META_KEY] as MetaDataModel).path = depth;\n\n      // ensure our store hasn't already been added\n      const has = this.states.find(s => s.name === name);\n\n      if (has) {\n        throw new Error(`Store has already been added: ${name}`);\n      }\n\n      // create new instance of defaults\n      if (Array.isArray(defaults)) {\n        defaults = [...defaults];\n      } else if (isObject(defaults)) {\n        defaults = { ...defaults };\n      } else if (defaults === undefined) {\n        defaults = {};\n      }\n\n      const instance = this._injector.get(klass);\n\n      mappedStores.push({\n        actions,\n        instance,\n        defaults,\n        name,\n        depth\n      });\n    }\n\n    this.states.push(...mappedStores);\n\n    return mappedStores;\n  }\n\n  addAndReturnDefaults(stores: any[]): any {\n    return this.add(stores).reduce((result, meta) => setValue(result, meta.depth, meta.defaults), {});\n  }\n\n  invokeActions(getState, setState, dispatch, action): any[] {\n    const results = [];\n\n    for (const metadata of this.states) {\n      const name = getTypeFromInstance(action);\n      const actionMetas = metadata.actions[name];\n\n      if (actionMetas) {\n        for (const actionMeta of actionMetas) {\n          const stateContext = {\n            getState(): any {\n              const state = getState();\n              return getValue(state, metadata.depth);\n            },\n            patchState(val: any): void {\n              if (Array.isArray(val)) {\n                throw new Error('Patching arrays is not supported.');\n              }\n\n              let state = getState();\n              const local = getValue(state, metadata.depth);\n              for (const k in val) {\n                local[k] = val[k];\n              }\n              state = setValue(state, metadata.depth, { ...local });\n              setState(state);\n              return state;\n            },\n            setState(val: any): any {\n              let state = getState();\n              state = setValue(state, metadata.depth, val);\n              setState(state);\n              return state;\n            },\n            dispatch(actions: any | any[]): Observable<any> {\n              return dispatch(actions);\n            }\n          };\n\n          const result = metadata.instance[actionMeta.fn](stateContext, action);\n          if (result) {\n            results.push(result);\n          }\n        }\n      }\n    }\n\n    return results;\n  }\n}\n",
    "import { META_KEY } from './symbols';\n\nexport interface MetaDataModel {\n  name: string;\n  actions: any;\n  defaults: any;\n  path: string;\n  children: any[];\n}\n\n/**\n * Ensures metadata is attached to the klass and returns it.\n */\nexport function ensureStoreMetadata(target): MetaDataModel {\n  if (!target.hasOwnProperty(META_KEY)) {\n    const defaultMetadata: MetaDataModel = {\n      name: null,\n      actions: {},\n      defaults: {},\n      path: null,\n      children: []\n    };\n\n    Object.defineProperty(target, META_KEY, { value: defaultMetadata });\n  }\n\n  return target[META_KEY];\n}\n\n/**\n * The generated function is faster than:\n * - pluck (Observable operator)\n * - memoize\n */\nexport function fastPropGetter(paths: string[]): (x: any) => any {\n  const segments = paths;\n  let seg = 'store.' + segments[0];\n  let i = 0;\n  const l = segments.length;\n\n  let expr = seg;\n  while (++i < l) {\n    expr = expr + ' && ' + (seg = seg + '.' + segments[i]);\n  }\n\n  const fn = new Function('store', 'return ' + expr + ';');\n\n  return <(x: any) => any>fn;\n}\n\n/**\n * Returns the type from a event class.\n */\nexport function getTypeFromKlass(event) {\n  if (event.type) {\n    return event.type;\n  } else if (event.name) {\n    return event.name;\n  }\n}\n\n/**\n * Returns the type from a event instance.\n */\nexport function getTypeFromInstance(event) {\n  if (event.constructor.type) {\n    return event.constructor.type;\n  } else if (event.constructor.name) {\n    return event.constructor.name;\n  } else if (event.type) {\n    // events from dev tools are plain objects\n    return event.type;\n  }\n}\n\n/**\n * Given an array of states, it will return a object graph. Example:\n *    const states = [\n *      Cart,\n *      CartSaved,\n *      CartSavedItems\n *    ]\n *\n * would return:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n */\nexport function buildGraph(states) {\n  const findName = klass => {\n    const meta = states.find(g => g === klass);\n    if (!meta) {\n      throw new Error(`Child state not found: ${klass}`);\n    }\n\n    if (!meta[META_KEY]) {\n      throw new Error('States must be decorated with @State() decorator');\n    }\n\n    return meta[META_KEY].name;\n  };\n\n  return states.reduce((result, klass) => {\n    if (!klass[META_KEY]) {\n      throw new Error('States must be decorated with @State() decorator');\n    }\n\n    const { name, children } = klass[META_KEY];\n    result[name] = (children || []).map(findName);\n    return result;\n  }, {});\n}\n\n/**\n * Given a states array, returns object graph\n * returning the name and state metadata. Example:\n *\n *  const graph = {\n *    cart: { metadata }\n *  };\n *\n */\nexport function nameToState(states) {\n  return states.reduce((result, klass) => {\n    if (!klass[META_KEY]) {\n      throw new Error('States must be decorated with @State() decorator');\n    }\n\n    const meta = klass[META_KEY];\n    result[meta.name] = klass;\n    return result;\n  }, {});\n}\n\n/**\n * Given a object relationship graph will return the full path\n * for the child items. Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const r = {\n *    cart: 'cart',\n *    saved: 'cart.saved',\n *    items: 'cart.saved.items'\n *  };\n *\n */\nexport function findFullParentPath(obj: any, newObj: any = {}) {\n  const visit = (child: any, keyToFind: string) => {\n    for (const key in child) {\n      if (child.hasOwnProperty(key) && child[key].indexOf(keyToFind) >= 0) {\n        const parent = visit(child, key);\n        return parent !== null ? `${parent}.${key}` : key;\n      }\n    }\n    return null;\n  };\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      const parent = visit(obj, key);\n      newObj[key] = parent ? `${parent}.${key}` : key;\n    }\n  }\n\n  return newObj;\n}\n\n/**\n * Given a object graph, it will return the items topologically sorted Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const results = [\n *    'items',\n *    'saved',\n *    'cart'\n *  ];\n *\n */\nexport function topologicalSort(graph) {\n  const sorted = [];\n  const visited = {};\n  const visit = (name, ancestors: any = []) => {\n    if (!Array.isArray(ancestors)) {\n      ancestors = [];\n    }\n\n    ancestors.push(name);\n    visited[name] = true;\n\n    graph[name].forEach(dep => {\n      if (ancestors.indexOf(dep) >= 0) {\n        throw new Error(`Circular dependency '${dep}' is required by '${name}': ${ancestors.join(' -> ')}`);\n      }\n\n      if (visited[dep]) return;\n      visit(dep, ancestors.slice(0));\n    });\n\n    if (sorted.indexOf(name) < 0) {\n      sorted.push(name);\n    }\n  };\n\n  Object.keys(graph).forEach(k => visit(k));\n\n  return sorted.reverse();\n}\n\n/**\n * Set a deeply nested value. Example:\n *\n *   setValue({ foo: { bar: { eat: false } } },\n *      'foo.bar.eat', true) //=> { foo: { bar: { eat: true } } }\n *\n * While it traverses it also creates new objects from top down.\n */\nexport const setValue = (obj: any, prop: string, val: any) => {\n  obj = { ...obj };\n\n  const split = prop.split('.');\n  const last = split[split.length - 1];\n\n  split.reduce((acc, part) => {\n    if (part === last) {\n      acc[part] = val;\n    } else {\n      acc[part] = { ...acc[part] };\n    }\n\n    return acc && acc[part];\n  }, obj);\n\n  return obj;\n};\n\n/**\n * Get a deeply nested value. Example:\n *\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\n *\n */\nexport const getValue = (obj: any, prop: string) =>\n  prop.split('.').reduce((acc: any, part: string) => acc && acc[part], obj);\n\n/**\n * Returns if the parameter is a object or not.\n */\nexport function isObject(obj) {\n  return (typeof obj === 'object' && obj !== null) || typeof obj === 'function';\n}\n",
    "import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nexport const ROOT_STATE_TOKEN = new InjectionToken<any>('ROOT_STATE_TOKEN');\nexport const FEATURE_STATE_TOKEN = new InjectionToken<any>('FEATURE_STATE_TOKEN');\nexport const META_KEY = 'NGXS_META';\n\nexport type NgxsPluginConstructor = new (...args: any[]) => NgxsPlugin;\n\nexport interface NgxsOptions {\n  plugins: Array<NgxsPluginConstructor | NgxsPluginFn>;\n}\n\nexport interface StateContext<T> {\n  /**\n   * Get the current state.\n   */\n  getState(): T;\n\n  /**\n   * Reset the state to a new value.\n   */\n  setState(val: T);\n\n  /**\n   * Patch the existing state with the provided value.\n   */\n  patchState(val: Partial<T>);\n\n  /**\n   * Dispatch a new action and return the dispatched observable.\n   */\n  dispatch(actions: any | any[]): Observable<void>;\n}\n\nexport type NgxsNextPluginFn = (state: any, mutation: any) => any;\n\nexport interface NgxsPlugin {\n  /**\n   * Handle the state/action before its submitted to the state handlers.\n   */\n  handle(state: any, action: any, next: NgxsNextPluginFn): any;\n}\n\nexport const NGXS_PLUGINS = new InjectionToken('NGXS_PLUGINS');\n\nexport type NgxsPluginFn = (state: any, mutation: any, next: NgxsNextPluginFn) => any;\n\nexport interface StoreOptions<T> {\n  /**\n   * Name of the state. Required.\n   */\n  name: string;\n\n  /**\n   * Default values for the state. If not provided, uses empty object.\n   */\n  defaults?: T;\n\n  /**\n   * Sub states for the given state.\n   */\n  children?: any[];\n}\n"
  ],
  "names": [
    "tslib_1.__values",
    "tslib_1.__extends"
  ],
  "mappings": "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"
}
